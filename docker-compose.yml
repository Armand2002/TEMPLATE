version: '3'
services:
  api-gateway:
    build: ./API-GATEWAY
    container_name: healtmatch-api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - auth
      - booking
      - catalog
      - payment
      - notification
    networks:
      - healtmatch-network

  auth:
    build: ./Auth
    container_name: healtmatch-auth-service
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=sqlite:///./auth.db
      - JWT_SECRET_KEY=your_production_secret_key
      - JWT_EXPIRE_MINUTES=30
    networks:
      - healtmatch-network

  booking:
    build: ./Booking
    container_name: healtmatch-booking-service
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=sqlite:///./booking.db
    networks:
      - healtmatch-network

  catalog:
    build: ./Catalog
    container_name: healtmatch-catalog-service
    ports:
      - "8003:8003"
    environment:
      - DATABASE_URL=sqlite:///./catalog.db
    networks:
      - healtmatch-network

  notification:
    build: ./Notification
    container_name: healtmatch-notification-service
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=sqlite:///./notification.db
    networks:
      - healtmatch-network

  payment:
    build: ./Payment
    container_name: healtmatch-payment-service
    ports:
      - "8005:8005"
    environment:
      - DATABASE_URL=sqlite:///./payment.db
      - STRIPE_SECRET_KEY=sk_test_51Qwl3g4bGuhP8JnHeiJ18EBTckWHYTSWsSJze09VsQEgRIfs5cC31kPVsavzGnokIQMlV8L5GmbATmn3CN9u3qjE00csdxrv2c  # Usa una chiave di test
      - STRIPE_WEBHOOK_SECRET=  # Genera un webhook per test
      - STRIPE_PUBLISHABLE_KEY=pk_test_51Qwl3g4bGuhP8JnHdmOoePEpNDmuQqc5N9iNOX2esXoc4vnBfxSTYqXHFreVOt0uU0vnsNb4rP56kUw0FYHbiYcN00fJYFxBga  # Per il frontend
    networks:
      - healtmatch-network

  user:
    build: ./Users
    container_name: healtmatch-users-service
    ports:
      - "8006:8006"
    environment:
      - DATABASE_URL=sqlite:///./user.db
    networks:
      - healtmatch-network

  web:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: ./docker-react
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - /app/node_modules
      - ./docker-react:/app
    networks:
      - healtmatch-network

  tests:
    stdin_open: true
    build:
      context: ./docker-react
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./docker-react:/app
    command: ['npm', 'run', 'test']
    networks:
      - healtmatch-network

networks:
  healtmatch-network:
    driver: bridge